# HTTPS 配置
:443, *.domain {
    tls {
        dns cloudflare cloudflareApiToken
        protocols tls1.2 tls1.3
        # 使用主流密码套件，模拟 Chrome/Firefox
        ciphers TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        # ALPN 协商，支持 HTTP/2
        alpn h2 http/1.1
    }

    # 移除服务器特征
    header {
        -Server
        -X-Powered-By
        -Alt-Svc
    }

    # 启用 HTTP/2
    protocols h1 h2

    route {
        # 简单伪装端点
        respond /robots.txt 200 {
            body "User-agent: *\nDisallow: /"
        }
        
        respond /favicon.ico 204
        
        # NaiveProxy 核心
        forward_proxy {
            basic_auth naiveUser naivePasswd
            hide_ip
            hide_via
            probe_resistance
        }
        
        # 你的后端服务 - 性能优化
        reverse_proxy /proxyPath localhost:2333 {
            header_up -Origin
            header_up X-Real-IP {remote_host}
            
            # 性能优化：不缓冲，直接传输
            flush_interval -1
            
            # 超时设置
            transport http {
                dial_timeout 30s
                response_header_timeout 0
                read_timeout 0
                write_timeout 0
                keepalive 90s
                keepalive_idle_conns 100
            }
        }
        
        # Microsoft Update 伪装
        reverse_proxy https://www.catalog.update.microsoft.com {
            header_up Host {upstream_hostport}
            header_up X-Forwarded-Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up User-Agent {header.User-Agent}
            header_up Accept {header.Accept}
            header_up Accept-Language {header.Accept-Language}
            header_up Accept-Encoding {header.Accept-Encoding}
            
            # 性能优化 - HTTP/2 复用
            transport http {
                dial_timeout 30s
                keepalive 90s
                keepalive_idle_conns 100
                versions h2 1.1
            }
        }
        
        # 访问日志
        log {
            output file /var/log/caddy/access.log {
                roll_size 10mb
                roll_keep 5
                roll_keep_for 720h
            }
            format json
        }
    }
}

# HTTP 跳转 HTTPS
:80, *.domain {
    redir https://{host}{uri} permanent
}